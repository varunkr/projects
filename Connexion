import string
import urllib2
import re

nameOf1 = None
nameof2 = None
check = 0

print '\n\n'

nameOf1_raw = raw_input('Enter first actor/actress : ')

print '\n\n'

nameOf2_raw = raw_input('Enter second actor/actress : ')


nameOf1=nameOf1_raw.replace(' ','_');
nameOf2=nameOf2_raw.replace(' ','_');

str1 = "http://en.wikipedia.org/w/api.php?action=query&prop=revisions&rvprop=content&format=jsonfm&titles="+ nameOf1 +"&rvsection=0"
str2 = "http://en.wikipedia.org/w/api.php?action=query&prop=revisions&rvprop=content&format=jsonfm&titles="+ nameOf2 +"&rvsection=0"
url1 = urllib2.urlopen(str1);
url2 = urllib2.urlopen(str2);

orig = url1.read();

rela = ["SPOUSE", "CHILD", "RELATIVE", "NAME"]
help1_relation = []
help2_relation = []
size = 4
list_1 = [[] for x in range(size)]
list_2 = [[] for x in range(size)]

for main_number in range(1,3):
        if main_number==1:
                url1 = urllib2.urlopen(str1);
                orig = url1.read();
        else:
                url2 = urllib2.urlopen(str2);
                orig = url2.read();

        pos1 = orig.find('Infobox')
        temp = orig[pos1:];
        pos2 = temp.find("'''");

        info_text = orig[pos1:pos2+pos1]


        pos_name = info_text.find('name');
        if(pos_name != -1):
                name = info_text[pos_name + len('name ='):]
                for i in range(len(name)):
                    if ord(name[i])>=65 and ord(name[i])<=90:
                        break;
                name = name[i:  (name.find('n|')) -1 ]

                if main_number==1:
                        list_1[3].append(name)
                else:
                        list_2[3].append(name)


        pos_relative = info_text.find('relatives');
        if(pos_relative != -1):
                relative = info_text[pos_relative + len('relatives ='):  (info_text[pos_relative:].find('n|')) + pos_relative+ 100]
                #assuming maximum 4 relatives
                #print relative
                n1 = relative.find('[[');
                n2 = relative.find(']]');
                #print relative[n1+2:n2]
                if main_number==1:
                        list_1[2].append(relative[n1+2:n2])
                        sk1 = relative.find("(");
                        sk2 = relative.find(")");
                        help1_relation.append(relative[sk1+1:sk2])

                else:
                        list_2[2].append(relative[n1+2:n2])
                        sk1 = relative.find("(");
                        sk2 = relative.find(")");
                        help2_relation.append(relative[sk1+1:sk2])
                if n2!=-1:
                    relative = relative[n2+2:]
                    n1 = relative.find('[[');
                    n2 = relative.find(']]');
                    #print relative[n1+2:n2]
                    if main_number==1:
                        list_1[2].append(relative[n1+2:n2])
                        sk1 = relative.find("(");
                        sk2 = relative.find(")");
                        help1_relation.append(relative[sk1+1:sk2])
                    else:
                        list_2[2].append(relative[n1+2:n2])
                        sk1 = relative.find("(");
                        sk2 = relative.find(")");
                        help2_relation.append(relative[sk1+1:sk2])
                #print relative[0:len(relative)-1]



        pos_spouse = info_text.find('spouse');
        if(pos_spouse != -1):
                spouse = info_text[pos_spouse + len('spouse ='):  (info_text[pos_spouse:].find('n|')) + len('spouse =')+pos_spouse]
                n1 = spouse.find('[[');
                n2 = spouse.find(']]');
                if main_number==1:
                        list_1[0].append(spouse[n1+2:n2])
                else:
                        list_2[0].append(spouse[n1+2:n2])
                


        regex = r'[' + "*" + r']';

        pattern = re.compile(regex)
        pos_parents = info_text.find('parents');
        if(pos_parents != -1):
                parents = info_text[pos_parents + len('parents ='):  (info_text[pos_parents:].find('n|')) + pos_parents]
                
                n1 = parents.find('[[');
                n2 = parents.find(']]');

                tit = re.findall(pattern, parents)


        pos_children = info_text.find('children');
        if(pos_children != -1):
                children = info_text[pos_children + len('children ='):  (info_text[pos_children:].find('n|')) + pos_children]
                n1 = children.find('[[');
                n2 = children.find(']]');
  
                if main_number==1:
                        list_1[1].append(children[n1+2:n2])
                else:
                        list_2[1].append(children[n1+2:n2])


str1 = "http://live.dbpedia.org/page/" + nameOf1
str2 = "http://live.dbpedia.org/page/" + nameOf2


url1 = urllib2.urlopen(str1);
url2 = urllib2.urlopen(str2);

orig1 = url1.read();
orig2 = url2.read();


pos_1 = [m.start() for m in re.finditer('dbpprop:starring', orig1)]
pos_2 = [m.start() for m in re.finditer('dbpprop:starring', orig2)]

l1 = len(pos_1)
l2 = len(pos_2)


movies_1 = ["" for i in xrange(l1)]
movies_2 = ["" for i in xrange(l2)]

for i in range(l1):
    pos2 = orig1.find('<small>dbpedia</small>:', pos_1[i]) + len('<small>dbpedia</small>:')
    pos3 = orig1.find('</a>', pos2)
    movies_1[i] = orig1[pos2: pos3]

for i in range(l2):
    pos2 = orig2.find('<small>dbpedia</small>:', pos_2[i]) + len('<small>dbpedia</small>:')
    pos3 = orig2.find('</a>', pos2)
    movies_2[i] = orig2[pos2: pos3]


print "\n\n"
for i in range(size):
        for j in range(size):
                for k in range(len(list_1[i])):
                        for l in range(len(list_2[j])):
                                if list_1[i][k] == list_2[j][l]:
                                    if i==3:
                                        print nameOf1_raw +   " is " + rela[j] + " of " + nameOf2_raw
                                    elif j==3:
                                        print rela[i] + " of " + nameOf1_raw +   " is " + nameOf2_raw
                                    else:
                                        print rela[i] + " of " + nameOf1_raw +   " is " + rela[j] + " of " + nameOf2_raw 


if 1:
    for i in range(l1):
        for j in range(l2):
            if movies_1[i] == movies_2[j]:
                check = 1

if check==0:
	print "They do not have any movies in comman.( Or may be the input format/spelling is wrong or does not matches that in the database)"

else:
	print '\n\n'+ "The movies which they have in common are:" + '\n'
	if 1:
		for i in range(l1):
			for j in range(l2):
				if movies_1[i] == movies_2[j]:
					movies_2[j] = movies_2[j].replace('_',' ');
					print movies_2[j]+'\n'

print '\n\n\n'                

